
template CheckCommand "dummy-host-generic" {
    import "plugin-check-command"
    command = [ PluginDir + "/libexec/test_hostcheck.pl" ]
    arguments = {
            "--type"            = "$check_type$"
            "--failchance"      = "$check_failchance$"
            "--previous-state"  = "$check_previous_state$"
            "--state-duration"  = "$check_state_duration$"
            "--hostname"        = "$check_hostname$"
    }

    vars.check_type             = "UP"
    vars.check_failchance       = "2%"
    vars.check_previous_state   = "$state$"
    vars.check_state_duration   = "$duration_sec$"
    vars.check_hostname         = "$name$"
}

template CheckCommand "dummy-service-generic" {
    import "plugin-check-command"
    command = [ PluginDir + "/libexec/test_servicecheck.pl" ]
    arguments = {
            "--total-critical-on-host"  = "$check_critical_on_host$"
            "--total-warning-on-host"   = "$check_warning_on_host$"
            "--type"                    = "$check_type$"
            "--failchance"              = "$check_failchance$"
            "--previous-state"          = "$check_previous_state$"
            "--state-duration"          = "$check_state_duration$"
            "--hostname"                = "$check_hostname$"
            "--servicedesc"             = "$check_servicedesc$"
    }
    vars.check_critical_on_host     = "$host.total_services_critical$"
    vars.check_warning_on_host      = "$host.total_services_warning$"
    vars.check_type                 = "random"
    vars.check_failchange           = "5%"
    vars.check_previous_state       = "$service.state$"
    vars.check_duration             = "$service.duration_sec$"
    vars.check_hostname             = "$host.name$"
    vars.check_servicedesc          = "$service.name$"
}

object CheckCommand "dummy-host" {
    import "dummy-host-generic"
}

object CheckCommand "dummy-service" {
    import "dummy-service-generic"
}

// Hostgroups

object HostGroup "all-hosts" {
    display_name = "All hosts on the system"
    assign where true
}

object HostGroup "all-ok" {
    display_name = "All ok hosts"
    assign where regex("^test-ok", host.name)
}

object HostGroup "all-chaos" {
    display_name = "All chaos hosts"
    assign where regex("^test-random", host.name)
}

object HostGroup "all-down" {
    display_name = "All down hosts"
    assign where regex("^test-down", host.name)
}

object HostGroup "all-up" {
    display_name = "All ok hosts"
    assign where regex("^test-ok", host.name)
}

object HostGroup "all-unreachable" {
    display_name = "All ok hosts"
    assign where regex("^test-unreachable", host.name)
}

object HostGroup "all-pending" {
    display_name = "All ok hosts"
    assign where regex("^test-pending", host.name)
}

// Servicegroups

object ServiceGroup "service-ok" {
    display_name = "All ok services"
    assign where regex("^service-ok", service.name)
}

object ServiceGroup "service-warning" {
    display_name = "All warning services"
    assign where regex("^service-warning", service.name)
}

object ServiceGroup "service-critical" {
    display_name = "All critical services"
    assign where regex("^service-critical", service.name)
}

object ServiceGroup "service-unknown" {
    display_name = "All unknown services"
    assign where regex("^service-unknown", service.name)
}

object ServiceGroup "service-flapping" {
    display_name = "All flapping services"
    assign where regex("^service-flapping", service.name)
}


object ServiceGroup "service-pending" {
    display_name = "All pending services"
    assign where regex("^service-pending", service.name)
}


// ---------------------------------------------------------------------------------------------------------------------
// Services
// ---------------------------------------------------------------------------------------------------------------------

function createService(filter, num, checkEnabled) {
    apply Service "service-" + filter + "-" + num {
        import "generic-service"
        check_command   = "dummy-service"
        enable_active_checks = checkEnabled
        vars.check_type = filter
        assign where match("*" + filter + "*", host.vars.check_config)
    }
}

createService("ok", "001", true)
createService("ok", "002", true)
createService("ok", "003", true)
createService("ok", "004", true)

createService("warning", "001", true)
createService("warning", "002", true)
createService("warning", "003", true)
createService("warning", "004", true)

createService("critical", "001", true)
createService("critical", "002", true)
createService("critical", "003", true)
createService("critical", "004", true)

createService("flap", "001", true)
createService("flap", "002", true)
createService("flap", "003", true)
createService("flap", "004", true)

createService("random", "001", true)
createService("random", "002", true)
createService("random", "003", true)
createService("random", "004", true)

createService("unknown", "001", true)
createService("unknown", "002", true)
createService("unknown", "003", true)
createService("unknown", "004", true)

createService("pending", "001", false)
createService("pending", "002", false)
createService("pending", "003", false)
createService("pending", "004", false)

// ---------------------------------------------------------------------------------------------------------------------
// Hosts
// ---------------------------------------------------------------------------------------------------------------------

function createHost(checkType, checkConfig, num, checkEnabled) {
    object Host "test-" + checkType + "-" + num {
        import "generic-host"
        address = "127.0.0.1"
        check_command = "dummy-host"
        enable_active_checks = checkEnabled
        vars.check_type = checkType
        vars.check_config = checkConfig
    }
}

// OK
createHost("ok", "ok", "001", true)
createHost("ok", "ok", "002", true)
createHost("ok", "ok", "003", true)
createHost("ok", "ok", "004", true)
createHost("ok", "ok", "005", true)
createHost("ok", "ok", "006", true)
createHost("ok", "ok", "007", true)
createHost("ok", "ok", "008", true)
createHost("ok", "ok", "009", true)
createHost("ok", "ok", "010", true)

// Chaotic
createHost("random", "random,flap", "001", true)
createHost("random", "random,flap", "002", true)
createHost("random", "random,flap", "003", true)
createHost("random", "random,flap", "004", true)
createHost("random", "random,flap", "005", true)
createHost("random", "random,flap", "006", true)
createHost("random", "random,flap", "007", true)
createHost("random", "random,flap", "008", true)
createHost("random", "random,flap", "009", true)
createHost("random", "random,flap", "010", true)

// Down
createHost("down", "warning,critical", "001", true)
createHost("down", "warning,critical", "002", true)
createHost("down", "warning,critical", "003", true)
createHost("down", "warning,critical", "004", true)
createHost("down", "warning,critical", "005", true)
createHost("down", "warning,critical", "006", true)
createHost("down", "warning,critical", "007", true)
createHost("down", "warning,critical", "008", true)
createHost("down", "warning,critical", "009", true)
createHost("down", "warning,critical", "010", true)

// Unreachable
createHost("unreachable", "unknown", "001", true)
createHost("unreachable", "unknown", "002", true)
createHost("unreachable", "unknown", "003", true)
createHost("unreachable", "unknown", "004", true)
createHost("unreachable", "unknown", "005", true)
createHost("unreachable", "unknown", "006", true)
createHost("unreachable", "unknown", "007", true)
createHost("unreachable", "unknown", "008", true)
createHost("unreachable", "unknown", "009", true)
createHost("unreachable", "unknown", "010", true)

// Pending
createHost("pending", "pending", "001", false)
createHost("pending", "pending", "002", false)
createHost("pending", "pending", "003", false)
createHost("pending", "pending", "004", false)
createHost("pending", "pending", "005", false)
createHost("pending", "pending", "006", false)
createHost("pending", "pending", "007", false)
createHost("pending", "pending", "008", false)
createHost("pending", "pending", "009", false)
createHost("pending", "pending", "010", false)

// Flapping
createHost("flap", "flap", "001", true)
createHost("flap", "flap", "002", true)
createHost("flap", "flap", "003", true)
createHost("flap", "flap", "004", true)
createHost("flap", "flap", "005", true)
createHost("flap", "flap", "006", true)
createHost("flap", "flap", "007", true)
createHost("flap", "flap", "008", true)
createHost("flap", "flap", "009", true)
createHost("flap", "flap", "010", true)

// EOF